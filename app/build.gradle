apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.adrian.papasport"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        flavorDimensions "default"
        multiDexEnabled true

        ndk {
            abiFilters "armeabi"//可以适当补填其他
        }
    }

    signingConfigs {
        debug
        release {
            storeFile file("./keystore/keystore.jks")
            storePassword "admin123"
            keyAlias "agentweb"
            keyPassword "admin123"
        }
    }

    buildTypes {
        release {
            // 不显示Log
//            buildConfigField "boolean", "LOG_DEBUG", "false"
//
//            minifyEnabled true
//            zipAlignEnabled true
//            // 移除无用的resource文件
//            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def fileName = "PapaSports_v${defaultConfig.versionName}_${releaseTime()}.apk"
                    outputFileName = fileName
                }
            }
        }
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getTimeZone("GMT+8"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation(rootProject.ext.dependencies.kotlinAnko) {
        exclude group: "com.android.support"
    }
    annotationProcessor rootProject.ext.dependencies.kotlinAnko
    api rootProject.ext.dependencies.agentWeb
    implementation rootProject.ext.dependencies.fastJson
//    implementation rootProject.ext.dependencies.androidAppCompatV7
//    implementation rootProject.ext.dependencies.androidSupportDesign
    implementation rootProject.ext.dependencies.twinklingRefreshLayout
    implementation rootProject.ext.dependencies.tencentSonic
    implementation rootProject.ext.dependencies.smartRefreshLayout
    implementation rootProject.ext.dependencies.smartRefreshHeader
    implementation 'com.android.support:multidex:1.0.3'

    implementation project(":basemodule")
    if (rootProject.ext.isModule) {
        implementation project(":nfcmodule")
        implementation project(":printmodule")
        implementation project(":rfidmodule")
    }
}
